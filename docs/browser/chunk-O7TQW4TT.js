import{j as o}from"./chunk-F6QTPZUH.js";import{V as i}from"./chunk-KXY2N67X.js";var l=(()=>{class n{constructor(){this.patterns={email:/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/,password:/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,phone:/^[1-9]{2}[9]{0,1}[0-9]{8}$/,cpf:/^(\d{3}\.\d{3}\.\d{3}-\d{2}|\d{11})$/,confirmationCode:/^\d{6}$/},this.masks={phone:"(00) 00000-0000",cpf:"000.000.000-00",confirmationCode:"000-000"},this.errorMessages={required:"Campo obrigat\xF3rio.",minlength:"Quantidade m\xEDnima de caracteres n\xE3o atingida.",maxlength:"Quantidade m\xE1xima de caracteres ultrapassada.",email:"E-mail inv\xE1lido.",invalidCpf:"CPF inv\xE1lido",pattern:"Formato inv\xE1lido."}}removeCpfMask(e){return e.replace(/\D/g,"")}validateCpf(e){let r=e.replace(/[^\d]/g,"");if(r.length!==11||/^(\d)\1{10}$/.test(r))return!1;let a=0;for(let s=0;s<9;s++)a+=parseInt(r.charAt(s))*(10-s);let t=a%11;if((t===10||t===11)&&(t=0),t!==parseInt(r.charAt(9)))return!1;a=0;for(let s=0;s<10;s++)a+=parseInt(r.charAt(s))*(11-s);return t=a%11,(t===10||t===11)&&(t=0),t===parseInt(r.charAt(10))}getErrorMessage(e){if(!e||!e.errors||!e.touched)return"";let r=e.errors,a=Object.keys(r);for(let t of a)if(this.errorMessages[t])return this.errorMessages[t];return"Erro inv\xE1lido"}getErrorMessagePassword(e){return e.errors?e.errors.required?"Campo obrigat\xF3rio.":e.errors.minLength?"A senha deve ter pelo menos 8 caracteres.":e.errors.uppercase?"A senha deve conter pelo menos uma letra mai\xFAscula.":e.errors.lowercase?"A senha deve conter pelo menos uma letra min\xFAscula.":e.errors.number?"A senha deve conter pelo menos um n\xFAmero.":e.errors.specialChar?"A senha deve conter pelo menos um caractere especial.":"Erro desconhecido.":""}createFormControl(e="",r=[]){return new o(e,r)}cpfValidator(){return e=>{let r=e.value,a=this.removeCpfMask(r);return a&&!this.validateCpf(a)?{invalidCpf:!0}:null}}validatePassword(e){let r={};return e.length<8&&(r.minLength=!0),/[A-Z]/.test(e)||(r.uppercase=!0),/[a-z]/.test(e)||(r.lowercase=!0),/[0-9]/.test(e)||(r.number=!0),/[^A-Za-z0-9]/.test(e)||(r.specialChar=!0),Object.keys(r).length?r:null}passwordValidator(){return e=>{if(!e.value)return null;let r=this.validatePassword(e.value);return r||null}}passwordsMatchValidator(e){let r=e.get("newPassword"),a=e.get("confirmPassword");return null}static{this.\u0275fac=function(r){return new(r||n)}}static{this.\u0275prov=i({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{l as a};
